name: Release

on:
  release:
    types:
      - published

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      # Required for version patching
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.x
          registry-url: 'https://registry.npmjs.org'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: deno install

      - name: Patch version
        run: npm version ${{ github.ref_name }} --no-commit-hooks --no-git-tag-version

      - name: Build frontend
        run: deno task build

      - name: Build versioned docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/rickli-cloud/headnet:${{ github.ref_name }}
          push: true

      - name: Build latest docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/rickli-cloud/headnet:latest
          push: true

      - name: Release build assets
        run: |
          cd ${{github.workspace}}
          zip -r build-${{github.event.release.tag_name}}.zip build
          gh release upload ${{github.event.release.tag_name}} build-${{github.event.release.tag_name}}.zip
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}
        shell: bash

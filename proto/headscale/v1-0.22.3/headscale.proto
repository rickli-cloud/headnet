syntax = "proto3";
package headscale.v1;
option  go_package = "github.com/juanfont/headscale/gen/go/v1";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

// headscale.proto


service HeadscaleService {
    // --- User start ---
    rpc GetUser(GetUserRequest) returns(GetUserResponse) {
        option(google.api.http) = {
            get : "/api/v1/user/{name}"
        };
    }

    rpc CreateUser(CreateUserRequest) returns(CreateUserResponse) {
        option(google.api.http) = {
            post : "/api/v1/user"
            body : "*"
        };
    }

    rpc RenameUser(RenameUserRequest) returns(RenameUserResponse) {
        option(google.api.http) = {
            post : "/api/v1/user/{old_name}/rename/{new_name}"
        };
    }

    rpc DeleteUser(DeleteUserRequest) returns(DeleteUserResponse) {
        option(google.api.http) = {
            delete : "/api/v1/user/{name}"
        };
    }

    rpc ListUsers(ListUsersRequest) returns(ListUsersResponse) {
        option(google.api.http) = {
            get : "/api/v1/user"
        };
    }
    // --- User end ---

    // --- PreAuthKeys start ---
    rpc CreatePreAuthKey(CreatePreAuthKeyRequest) returns(CreatePreAuthKeyResponse) {
        option(google.api.http) = {
            post : "/api/v1/preauthkey"
            body : "*"
        };
    }

    rpc ExpirePreAuthKey(ExpirePreAuthKeyRequest) returns(ExpirePreAuthKeyResponse) {
        option(google.api.http) = {
            post : "/api/v1/preauthkey/expire"
            body : "*"
        };
    }

    rpc ListPreAuthKeys(ListPreAuthKeysRequest) returns(ListPreAuthKeysResponse) {
        option(google.api.http) = {
            get : "/api/v1/preauthkey"
        };
    }
    // --- PreAuthKeys end ---

    // --- Machine start ---
    rpc DebugCreateMachine(DebugCreateMachineRequest) returns(DebugCreateMachineResponse) {
        option(google.api.http) = {
            post : "/api/v1/debug/machine"
            body : "*"
        };
    }

    rpc GetMachine(GetMachineRequest) returns(GetMachineResponse) {
        option(google.api.http) = {
            get : "/api/v1/machine/{machine_id}"
        };
    }

    rpc SetTags(SetTagsRequest) returns(SetTagsResponse) {
        option(google.api.http) = {
            post : "/api/v1/machine/{machine_id}/tags"
            body : "*"
        };
    }

    rpc RegisterMachine(RegisterMachineRequest) returns(RegisterMachineResponse) {
        option(google.api.http) = {
            post : "/api/v1/machine/register"
        };
    }

    rpc DeleteMachine(DeleteMachineRequest) returns(DeleteMachineResponse) {
        option(google.api.http) = {
            delete : "/api/v1/machine/{machine_id}"
        };
    }

    rpc ExpireMachine(ExpireMachineRequest) returns(ExpireMachineResponse) {
        option(google.api.http) = {
            post : "/api/v1/machine/{machine_id}/expire"
        };
    }

    rpc RenameMachine(RenameMachineRequest) returns(RenameMachineResponse) {
        option(google.api.http) = {
            post : "/api/v1/machine/{machine_id}/rename/{new_name}"
        };
    }

    rpc ListMachines(ListMachinesRequest) returns(ListMachinesResponse) {
        option(google.api.http) = {
            get : "/api/v1/machine"
        };
    }

    rpc MoveMachine(MoveMachineRequest) returns(MoveMachineResponse) {
        option(google.api.http) = {
            post : "/api/v1/machine/{machine_id}/user"
        };
    }
    // --- Machine end ---

    // --- Route start ---
    rpc GetRoutes(GetRoutesRequest) returns(GetRoutesResponse) {
        option(google.api.http) = {
            get : "/api/v1/routes"
        };
    }

    rpc EnableRoute(EnableRouteRequest) returns(EnableRouteResponse) {
        option(google.api.http) = {
            post : "/api/v1/routes/{route_id}/enable"
        };
    }

    rpc DisableRoute(DisableRouteRequest) returns(DisableRouteResponse) {
        option(google.api.http) = {
            post : "/api/v1/routes/{route_id}/disable"
        };
    }

    rpc GetMachineRoutes(GetMachineRoutesRequest) returns(GetMachineRoutesResponse) {
        option(google.api.http) = {
            get : "/api/v1/machine/{machine_id}/routes"
        };
    }

    rpc DeleteRoute(DeleteRouteRequest) returns(DeleteRouteResponse) {
        option(google.api.http) = {
            delete : "/api/v1/routes/{route_id}"
        };
    }

    // --- Route end ---

    // --- ApiKeys start ---
    rpc CreateApiKey(CreateApiKeyRequest) returns(CreateApiKeyResponse) {
        option(google.api.http) = {
            post : "/api/v1/apikey"
            body : "*"
        };
    }

    rpc ExpireApiKey(ExpireApiKeyRequest) returns(ExpireApiKeyResponse) {
        option(google.api.http) = {
            post : "/api/v1/apikey/expire"
            body : "*"
        };
    }

    rpc ListApiKeys(ListApiKeysRequest) returns(ListApiKeysResponse) {
        option(google.api.http) = {
            get : "/api/v1/apikey"
        };
    }
    // --- ApiKeys end ---

    // Implement Tailscale API
    // rpc GetDevice(GetDeviceRequest) returns(GetDeviceResponse) {
    //     option(google.api.http) = {
    //         get : "/api/v1/device/{id}"
    //     };
    // }

    // rpc DeleteDevice(DeleteDeviceRequest) returns(DeleteDeviceResponse) {
    //     option(google.api.http) = {
    //         delete : "/api/v1/device/{id}"
    //     };
    // }

    // rpc GetDeviceRoutes(GetDeviceRoutesRequest) returns(GetDeviceRoutesResponse) {
    //     option(google.api.http) = {
    //         get : "/api/v1/device/{id}/routes"
    //     };
    // }

    // rpc EnableDeviceRoutes(EnableDeviceRoutesRequest) returns(EnableDeviceRoutesResponse) {
    //     option(google.api.http) = {
    //         post : "/api/v1/device/{id}/routes"
    //     };
    // }
}

// apikey.proto

message ApiKey {
    uint64                    id         = 1;
    string                    prefix     = 2;
    google.protobuf.Timestamp expiration = 3;
    google.protobuf.Timestamp created_at = 4;
    google.protobuf.Timestamp last_seen  = 5;
}

message CreateApiKeyRequest {
    google.protobuf.Timestamp expiration = 1;
}

message CreateApiKeyResponse {
    string api_key = 1;
}

message ExpireApiKeyRequest {
    string prefix = 1;
}

message ExpireApiKeyResponse {
}

message ListApiKeysRequest {
}

message ListApiKeysResponse {
    repeated ApiKey api_keys = 1;
}

// device.proto

// This is a potential reimplementation of Tailscale's API
// https://github.com/tailscale/tailscale/blob/main/api.md

// message Latency {
//     float latency_ms = 1;
//     bool  preferred  = 2;
// }

// message ClientSupports {
//     bool hair_pinning = 1;
//     bool ipv6         = 2;
//     bool pcp          = 3;
//     bool pmp          = 4;
//     bool udp          = 5;
//     bool upnp         = 6;
// }

// message ClientConnectivity {
//     repeated string      endpoints                 = 1;
//     string               derp                      = 2;
//     bool                 mapping_varies_by_dest_ip = 3;
//     map<string, Latency> latency                   = 4;
//     ClientSupports       client_supports           = 5;
// }

// message GetDeviceRequest {
//     string id = 1;
// }

// message GetDeviceResponse {
//     repeated string           addresses                   = 1;
//     string                    id                          = 2;
//     string                    user                        = 3;
//     string                    name                        = 4;
//     string                    hostname                    = 5;
//     string                    client_version              = 6;
//     bool                      update_available            = 7;
//     string                    os                          = 8;
//     google.protobuf.Timestamp created                     = 9;
//     google.protobuf.Timestamp last_seen                   = 10;
//     bool                      key_expiry_disabled         = 11;
//     google.protobuf.Timestamp expires                     = 12;
//     bool                      authorized                  = 13;
//     bool                      is_external                 = 14;
//     string                    machine_key                 = 15;
//     string                    node_key                    = 16;
//     bool                      blocks_incoming_connections = 17;
//     repeated string           enabled_routes              = 18;
//     repeated string           advertised_routes           = 19;
//     ClientConnectivity        client_connectivity         = 20;
// }

// message DeleteDeviceRequest {
//     string id = 1;
// }

// message DeleteDeviceResponse {
// }

// message GetDeviceRoutesRequest {
//     string id = 1;
// }

// message GetDeviceRoutesResponse {
//     repeated string enabled_routes    = 1;
//     repeated string advertised_routes = 2;
// }

// message EnableDeviceRoutesRequest {
//     string          id     = 1;
//     repeated string routes = 2;
// }

// message EnableDeviceRoutesResponse {
//     repeated string enabled_routes    = 1;
//     repeated string advertised_routes = 2;
// }


// machine.proto

enum RegisterMethod {
    REGISTER_METHOD_UNSPECIFIED = 0;
    REGISTER_METHOD_AUTH_KEY    = 1;
    REGISTER_METHOD_CLI         = 2;
    REGISTER_METHOD_OIDC        = 3;
}

message Machine {
    uint64          id           = 1;
    string          machine_key  = 2;
    string          node_key     = 3;
    string          disco_key    = 4;
    repeated string ip_addresses = 5;
    string          name         = 6;
    User user          = 7;

    google.protobuf.Timestamp last_seen              = 8;
    google.protobuf.Timestamp last_successful_update = 9;
    google.protobuf.Timestamp expiry                 = 10;

    PreAuthKey pre_auth_key = 11;

    google.protobuf.Timestamp created_at = 12;

    RegisterMethod register_method = 13;

    reserved 14 to 17;
    // google.protobuf.Timestamp updated_at = 14;
    // google.protobuf.Timestamp deleted_at = 15;

    // bytes host_info      = 15;
    // bytes endpoints      = 16;
    // bytes enabled_routes = 17;

    repeated string forced_tags  = 18;
    repeated string invalid_tags = 19;
    repeated string valid_tags   = 20;
    string          given_name   = 21;
    bool            online       = 22;
}

message RegisterMachineRequest {
    string user = 1;
    string key       = 2;
}

message RegisterMachineResponse {
    Machine machine = 1;
}

message GetMachineRequest {
    uint64 machine_id = 1;
}

message GetMachineResponse {
    Machine machine = 1;
}

message SetTagsRequest {
    uint64          machine_id = 1;
    repeated string tags       = 2;
}

message SetTagsResponse {
    Machine machine = 1;
}

message DeleteMachineRequest {
    uint64 machine_id = 1;
}

message DeleteMachineResponse {
}

message ExpireMachineRequest {
    uint64 machine_id = 1;
}

message ExpireMachineResponse {
    Machine machine = 1;
}

message RenameMachineRequest {
    uint64 machine_id = 1;
    string new_name   = 2;
}

message RenameMachineResponse {
    Machine machine = 1;
}

message ListMachinesRequest {
    string user = 1;
}

message ListMachinesResponse {
    repeated Machine machines = 1;
}

message MoveMachineRequest {
    uint64 machine_id = 1;
    string user  = 2;
}

message MoveMachineResponse {
    Machine machine = 1;
}

message DebugCreateMachineRequest {
    string user       = 1;
    string          key    = 2;
    string          name   = 3;
    repeated string routes = 4;
}

message DebugCreateMachineResponse {
    Machine machine = 1;
}

// preauthkey.proto

message PreAuthKey {
    string user                     = 1;
    string                    id         = 2;
    string                    key        = 3;
    bool                      reusable   = 4;
    bool                      ephemeral  = 5;
    bool                      used       = 6;
    google.protobuf.Timestamp expiration = 7;
    google.protobuf.Timestamp created_at = 8;
    repeated string           acl_tags   = 9;
}

message CreatePreAuthKeyRequest {
    string user                     = 1;
    bool                      reusable   = 2;
    bool                      ephemeral  = 3;
    google.protobuf.Timestamp expiration = 4;
    repeated string           acl_tags   = 5;
}

message CreatePreAuthKeyResponse {
    PreAuthKey pre_auth_key = 1;
}

message ExpirePreAuthKeyRequest {
    string user = 1;
    string key       = 2;
}

message ExpirePreAuthKeyResponse {
}

message ListPreAuthKeysRequest {
    string user = 1;
}

message ListPreAuthKeysResponse {
    repeated PreAuthKey pre_auth_keys = 1;
}

// routes.proto

message Route {
    uint64  id          = 1;
    Machine machine     = 2;
    string  prefix      = 3;
    bool    advertised   = 4;
    bool    enabled     = 5;
    bool    is_primary  = 6;

    google.protobuf.Timestamp created_at = 7;
    google.protobuf.Timestamp updated_at = 8;
    google.protobuf.Timestamp deleted_at = 9;
}

message GetRoutesRequest {
}

message GetRoutesResponse {
    repeated Route routes = 1;
}

message EnableRouteRequest {
    uint64 route_id = 1;
}

message EnableRouteResponse {
}

message DisableRouteRequest {
    uint64 route_id = 1;
}

message DisableRouteResponse {
}

message GetMachineRoutesRequest {
    uint64 machine_id = 1;
}

message GetMachineRoutesResponse {
    repeated Route routes = 1;
}

message DeleteRouteRequest {
    uint64 route_id = 1;
}

message DeleteRouteResponse {
}

// user.proto

message User {
    string                    id         = 1;
    string                    name       = 2;
    google.protobuf.Timestamp created_at = 3;
}

message GetUserRequest {
    string name = 1;
}

message GetUserResponse {
    User user = 1;
}

message CreateUserRequest {
    string name = 1;
}

message CreateUserResponse {
    User user = 1;
}

message RenameUserRequest {
    string old_name = 1;
    string new_name = 2;
}

message RenameUserResponse {
    User user = 1;
}

message DeleteUserRequest {
    string name = 1;
}

message DeleteUserResponse {
}

message ListUsersRequest {
}

message ListUsersResponse {
    repeated User users = 1;
}

